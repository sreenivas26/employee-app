stages:
  - test
  - build
  - deploy-staging

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE/employee-app/employee-image:$CI_COMMIT_REF_SLUG
  STAGING_APP: emp-app-stage
  HEROKU_STAGING: "registry.heroku.com/$STAGING_APP/web"
    

lint_test:
  image: python:3.8.0-slim
  stage: test
  before_script:
    - pip install flake8-html
  script:
    - flake8 --format=html --htmldir=flake_reports/
  artifacts:
    when: always
    paths:
      - flake_reports/

  tags:
    - docker

build:
  image: docker:stable
  services:
    - docker:dind
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker images
    - docker push $CI_REGISTRY_IMAGE
  tags:
    - docker:stable

deploy:
  image: docker:stable
  services:
    - docker:dind
  stage: deploy-staging
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE
    - docker tag $CI_REGISTRY_IMAGE $HEROKU_STAGING
    - docker login -u _ -p $HEROKU_STAGING_API_KEY
    - docker push $HEROKU_STAGING
  tags:
    - docker:stable 

